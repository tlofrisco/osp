<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="description" content="" />

		<link rel="icon" href="/favicon.ico" sizes="any" />
		<link rel="icon" href="/favicon.svg" type="image/svg+xml" />

		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="manifest" href="/site.webmanifest" />

		<meta name="msapplication-TileColor" content="#2b5797" />
		<meta name="theme-color" content="#ffffff" />

		<meta name="viewport" content="width=device-width, initial-scale=1" />
		
	</head>

	<body>
		<script nonce="Fpg9oHMaq3aUeAcHL4Vfiw==">
			async function purge() {
				return await fetch('/purge');
			}

			function shouldRefresh(refresh, url) {
				const { date: lastRefresh, url: lastUrl } = refresh;

				if (lastUrl === null) {
					return true;
				}

				if (url !== lastUrl) {
					return false;
				}

				const now = new Date().getTime();
				const delay = 1 * 1 * 1000;

				if (lastRefresh + delay > now) {
					return false;
				}

				return true;
			}

			function setAutoRefresh(url) {
				window.localStorage.setItem(
					'shouldRefresh',
					JSON.stringify({ url, date: new Date().getTime() })
				);
			}

			function errorCheck(error) {
				const message = error?.reason?.message || '';

				if (
					message.startsWith('Failed to fetch dynamically imported module:')
				) {
					const lastRefresh = JSON.parse(
						window.localStorage.getItem('shouldRefresh') || '{}'
					);

					const refresh = shouldRefresh(lastRefresh, 'purge');
					setAutoRefresh('purge');

					// Check if this works for safari, then swap it out with the purge or combine it? ¯\_(ツ)_/¯
					// const response = await fetch(window.location.href, { cache: 'reload' });

					// Let's just try forcing the browser cache out either way, more requests to the CDN but it should be fine
					purge()
						.then((response) => {
							// Check if we've tried the hard refresh using the purge header if we have recently skip reloading
							if (refresh && response.status === 200) {
								console.log('reloading');
								// Call reload(true) in FF this will force a purge of the cache in other browsers it won't
								// but the extra param is a no-op
								// https://developer.mozilla.org/en-US/docs/Web/API/Location/reload#parameters
								location.reload(true);
								// Maybe emit another error so we can check how many errors we have byeond this code path
							} else {
								console.log('skipped refresh');
							}
						})
						.catch((e) => {
							console.error(e);
						});
				}
			}

			window.addEventListener('error', errorCheck);
			window.addEventListener('unhandledrejection', errorCheck);
		</script>
		<div>
			<script nonce="Fpg9oHMaq3aUeAcHL4Vfiw==">
				{
					__sveltekit_1ie5cwv = {
						base: new URL("..", location).pathname.slice(0, -1)
					};

					const element = document.currentScript.parentElement;

					Promise.all([
						import("../_app/immutable/entry/start.DZi_kndP.js"),
						import("../_app/immutable/entry/app.C0L6_xIO.js")
					]).then(([kit, app]) => {
						kit.start(app, element);
					});
				}
			</script>
		</div>
	</body>
</html>
